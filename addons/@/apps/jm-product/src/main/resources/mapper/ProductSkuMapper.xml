<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.jimoos.dao.ProductSkuMapper">
    <resultMap id="BaseResultMap" type="cn.jimoos.model.ProductSku">
        <!--@mbg.generated-->
        <!--@Table t_product_sku-->
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="attr_value_ids" jdbcType="VARCHAR" property="attrValueIds"/>
        <result column="cover" jdbcType="VARCHAR" property="cover"/>
        <result column="price" jdbcType="DECIMAL" property="price"/>
        <result column="show_price" jdbcType="DECIMAL" property="showPrice"/>
        <result column="product_id" jdbcType="BIGINT" property="productId"/>
        <result column="merchant_id" jdbcType="BIGINT" property="merchantId"/>
        <result column="create_at" jdbcType="BIGINT" property="createAt"/>
        <result column="update_at" jdbcType="BIGINT" property="updateAt"/>
        <result column="deleted" jdbcType="BOOLEAN" property="deleted"/>
    </resultMap>
    <sql id="Base_Column_List">
        <!--@mbg.generated-->
        id, attr_value_ids, cover, price, show_price, product_id, merchant_id, create_at,
        update_at, deleted
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        <!--@mbg.generated-->
        select
        <include refid="Base_Column_List"/>
        from t_product_sku
        where id = #{id,jdbcType=BIGINT}
    </select>
    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="cn.jimoos.model.ProductSku"
            useGeneratedKeys="true">
        <!--@mbg.generated-->
        insert into t_product_sku (attr_value_ids, cover, price,
                                   show_price, product_id, merchant_id,
                                   create_at, update_at, deleted)
        values (#{attrValueIds,jdbcType=VARCHAR}, #{cover,jdbcType=VARCHAR}, #{price,jdbcType=DECIMAL},
                #{showPrice,jdbcType=DECIMAL}, #{productId,jdbcType=BIGINT}, #{merchantId,jdbcType=BIGINT},
                #{createAt,jdbcType=BIGINT}, #{updateAt,jdbcType=BIGINT}, #{deleted,jdbcType=BOOLEAN})
    </insert>
    <update id="updateByPrimaryKey" parameterType="cn.jimoos.model.ProductSku">
        <!--@mbg.generated-->
        update t_product_sku
        set attr_value_ids = #{attrValueIds,jdbcType=VARCHAR},
            cover          = #{cover,jdbcType=VARCHAR},
            price          = #{price,jdbcType=DECIMAL},
            show_price     = #{showPrice,jdbcType=DECIMAL},
            product_id     = #{productId,jdbcType=BIGINT},
            merchant_id    = #{merchantId,jdbcType=BIGINT},
            create_at      = #{createAt,jdbcType=BIGINT},
            update_at      = #{updateAt,jdbcType=BIGINT},
            deleted        = #{deleted,jdbcType=BOOLEAN}
        where id = #{id,jdbcType=BIGINT}
    </update>

<!--   根据字段更新  -->
    <update id="updateById" parameterType="cn.jimoos.model.ProductSku">
        update t_product_sku
        <set>
            <if test="attrValueIds != null and attrValueIds != ''">
                attr_value_ids = #{attrValueIds,jdbcType=VARCHAR},
            </if>
            <if test="cover != null and cover != ''">
                cover          = #{cover,jdbcType=VARCHAR},
            </if>
            <if test="price != null">
                price          = #{price,jdbcType=DECIMAL},
            </if>
            <if test="showPrice != null">
                show_price     = #{showPrice,jdbcType=DECIMAL},
            </if>
            <if test="productId != null">
                product_id     = #{productId,jdbcType=BIGINT},
            </if>
            <if test="merchantId != null">
                merchant_id    = #{merchantId,jdbcType=BIGINT},
            </if>
            <if test="createAt != null">
                create_at      = #{createAt,jdbcType=BIGINT},
            </if>
            <if test="updateAt != null">
                update_at      = #{updateAt,jdbcType=BIGINT},
            </if>
            <if test="deleted != null">
                deleted        = #{deleted,jdbcType=BOOLEAN},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>

    <insert id="batchInsert" keyColumn="id" keyProperty="id" parameterType="map" useGeneratedKeys="true">
        <!--@mbg.generated-->
        insert into t_product_sku
                (attr_value_ids, cover, price, show_price, product_id, merchant_id, create_at, update_at,
                 deleted)
                values
        <foreach collection="list" item="item" separator=",">
            (#{item.attrValueIds,jdbcType=VARCHAR}, #{item.cover,jdbcType=VARCHAR}, #{item.price,jdbcType=DECIMAL},
             #{item.showPrice,jdbcType=DECIMAL}, #{item.productId,jdbcType=BIGINT}, #{item.merchantId,jdbcType=BIGINT},
             #{item.createAt,jdbcType=BIGINT}, #{item.updateAt,jdbcType=BIGINT}, #{item.deleted,jdbcType=BOOLEAN})
        </foreach>
    </insert>

    <!--auto generated by MybatisCodeHelper on 2021-03-31-->
    <select id="findByProductId" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_product_sku
        where deleted = false
          AND product_id = #{productId,jdbcType=BIGINT}
    </select>

    <!--auto generated by MybatisCodeHelper on 2021-03-31-->
    <delete id="deleteByProductId">
        delete
        from t_product_sku
        where product_id = #{productId,jdbcType=BIGINT}
    </delete>

    <!--auto generated by MybatisCodeHelper on 2021-03-31-->
    <update id="updateDeletedByProductId">
        update t_product_sku
        set deleted=#{updatedDeleted,jdbcType=BOOLEAN}
        where product_id = #{productId,jdbcType=BIGINT}
    </update>

    <!--auto generated by MybatisCodeHelper on 2021-04-01-->
    <select id="findAnyOneByProductId" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_product_sku
        where deleted = false
          AND product_id = #{productId,jdbcType=BIGINT}
        order by create_at desc
        limit 1
    </select>

    <select id="findMinPriceByProductId" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_product_sku
        where deleted = false
          AND product_id = #{productId,jdbcType=BIGINT}
        order by price
        limit 1
    </select>

    <!--auto generated by MybatisCodeHelper on 2021-04-02-->
    <select id="findMinPricesByProductIds" resultMap="BaseResultMap">
        select tps.id,
               tps.attr_value_ids,
               tps.cover,
               tps.price,
               tps.show_price,
               tps.product_id,
               tps.merchant_id,
               tps.create_at,
               tps.update_at,
               tps.deleted
        from
                (
                    select 
                    case
                        when
                        @product_id = product_id THEN
                        @rn := @rn + 1 ELSE @rn := 1 END AS rn,
                        @product_id := product_id as groupById,
                        a.*
                        FROM
                        ( SELECT * FROM t_product_sku where product_id in 
                        <foreach item="item" index="index" collection="productIdCollection" open="(" separator="," close=")">
                            #{item,jdbcType=BIGINT}
                        </foreach> 
                        ORDER BY product_id, price ) a,
                        (SELECT @rn := 1 ,@product_id := 0 ) b
                ) tps
        where rn = 1
    </select>


    <select id="findDTOByIds" resultType="cn.jimoos.dto.ProductSkuForOrderDTO">
        select ps.product_id     as productId,
               ps.id             as skuId,
               tp.name           as productName,
               ps.cover          as skuCover,
               ps.price          as price,
               tp.type           as type,
               ps.attr_value_ids as attrValueIds,
               tp.cover          as productCover
        from t_product_sku ps
                     left join t_product tp on ps.product_id = tp.id
                where tp.status = 2
                  and tp.deleted = false
                  and ps.deleted = false
                  and ps.id in
        <foreach item="item" index="index" collection="skuIds"
                 open="(" separator="," close=")">
            #{item,jdbcType=BIGINT}
        </foreach>
    </select>

    <select id="findDTOById" resultType="cn.jimoos.dto.ProductSkuForOrderDTO">
        select ps.product_id     as productId,
               ps.id             as skuId,
               tp.name           as productName,
               ps.cover          as skuCover,
               ps.price          as price,
               tp.type           as type,
               ps.attr_value_ids as attrValueIds,
               tp.cover          as productCover
        from t_product_sku ps
                     left join t_product tp on ps.product_id = tp.id
        where tp.status = 2
          and tp.deleted = false
          and ps.deleted = false
          and ps.id = #{skuId,jdbcType=BIGINT}
    </select>

</mapper>
