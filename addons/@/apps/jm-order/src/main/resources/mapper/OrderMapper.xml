<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.jimoos.dao.OrderMapper">
    <resultMap id="BaseResultMap" type="cn.jimoos.model.Order">
        <!--@mbg.generated-->
        <!--@Table t_order-->
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="order_num" jdbcType="VARCHAR" property="orderNum"/>
        <result column="subject" jdbcType="VARCHAR" property="subject"/>
        <result column="order_type" jdbcType="VARCHAR" property="orderType"/>
        <result column="item_amount" jdbcType="INTEGER" property="itemAmount"/>
        <result column="total_price" jdbcType="DECIMAL" property="totalPrice"/>
        <result column="total_fee" jdbcType="DECIMAL" property="totalFee"/>
        <result column="total_product_price" jdbcType="DECIMAL" property="totalProductPrice"/>
        <result column="total_discount" jdbcType="DECIMAL" property="totalDiscount"/>
        <result column="real_pay" jdbcType="DECIMAL" property="realPay"/>
        <result column="user_id" jdbcType="BIGINT" property="userId"/>
        <result column="comment" jdbcType="VARCHAR" property="comment"/>
        <result column="status" jdbcType="TINYINT" property="status"/>
        <result column="refund" jdbcType="BOOLEAN" property="refund"/>
        <result column="rate" jdbcType="BOOLEAN" property="rate"/>
        <result column="extra" jdbcType="VARCHAR" property="extra"/>
        <result column="create_at" jdbcType="BIGINT" property="createAt"/>
        <result column="update_at" jdbcType="BIGINT" property="updateAt"/>
        <result column="deleted" jdbcType="BOOLEAN" property="deleted"/>
    </resultMap>
    <sql id="Base_Column_List">
        <!--@mbg.generated-->
        id, order_num, subject, order_type, item_amount, total_price, total_fee, total_product_price,total_discount,
        real_pay, user_id,
        `comment`, `status`, refund, rate,extra,create_at, update_at, deleted
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        <!--@mbg.generated-->
        select
        <include refid="Base_Column_List"/>
        from t_order
        where id = #{id,jdbcType=BIGINT}
    </select>

    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="cn.jimoos.model.Order"
            useGeneratedKeys="true">
        <!--@mbg.generated-->
        insert into t_order (order_num, subject, order_type, item_amount, total_price, total_fee, total_product_price,
                             total_discount,
                             real_pay, user_id, `comment`, `status`, refund, rate, extra, create_at, update_at, deleted)
        values (#{orderNum,jdbcType=VARCHAR}, #{subject,jdbcType=VARCHAR}, #{orderType,jdbcType=VARCHAR},
                #{itemAmount,jdbcType=INTEGER}, #{totalPrice,jdbcType=DECIMAL}, #{totalFee,jdbcType=DECIMAL},
                #{totalProductPrice,jdbcType=DECIMAL}, #{totalDiscount,jdbcType=DECIMAL}, #{realPay,jdbcType=DECIMAL},
                #{userId,jdbcType=BIGINT}, #{comment,jdbcType=VARCHAR},
                #{status,jdbcType=TINYINT}, #{refund,jdbcType=BOOLEAN}, #{rate,jdbcType=BOOLEAN},
                #{extra,jdbcType=VARCHAR},
                #{createAt,jdbcType=BIGINT}, #{updateAt,jdbcType=BIGINT}, #{deleted,jdbcType=BOOLEAN})
    </insert>
    <update id="updateByPrimaryKey" parameterType="cn.jimoos.model.Order">
        <!--@mbg.generated-->
        update t_order
        set order_num           = #{orderNum,jdbcType=VARCHAR},
            subject             = #{subject,jdbcType=VARCHAR},
            order_type          = #{orderType,jdbcType=VARCHAR},
            item_amount         = #{itemAmount,jdbcType=INTEGER},
            total_price         = #{totalPrice,jdbcType=DECIMAL},
            total_fee           = #{totalFee,jdbcType=DECIMAL},
            total_product_price = #{totalProductPrice,jdbcType=DECIMAL},
            total_discount      = #{totalDiscount,jdbcType=DECIMAL},
            real_pay            = #{realPay,jdbcType=DECIMAL},
            user_id             = #{userId,jdbcType=BIGINT},
            `comment`           = #{comment,jdbcType=VARCHAR},
            extra               = #{extra,jdbcType=VARCHAR},
            `status`            = #{status,jdbcType=TINYINT},
            refund              = #{refund,jdbcType=BOOLEAN},
            rate                = #{rate,jdbcType=BOOLEAN},
            create_at           = #{createAt,jdbcType=BIGINT},
            update_at           = #{updateAt,jdbcType=BIGINT},
            deleted             = #{deleted,jdbcType=BOOLEAN}
        where id = #{id,jdbcType=BIGINT}
    </update>

    <!--auto generated by MybatisCodeHelper on 2020-12-25-->
    <select id="findOneByOrderNumAndUserId" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_order
        where order_num = #{orderNum,jdbcType=VARCHAR}
          and user_id = #{userId,jdbcType=BIGINT}
          and deleted = false
        order by create_at desc
        limit 1
    </select>

    <!--auto generated by MybatisCodeHelper on 2020-12-25-->
    <select id="findOneByOrderNum" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_order
        where order_num = #{orderNum,jdbcType=VARCHAR}
        order by create_at desc
        limit 1
    </select>

    <!--auto generated by MybatisCodeHelper on 2021-01-08-->
    <select id="findOneByUserIdAndId" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_order
        where user_id = #{userId,jdbcType=BIGINT}
          and id = #{id,jdbcType=BIGINT}
    </select>

    <!--auto generated by MybatisCodeHelper on 2021-01-13-->
    <select id="findExpireOrders" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_order
        where `status` = #{status,jdbcType=TINYINT}
          and create_at + #{cancelDuration,jdbcType=BIGINT} <![CDATA[<]]> #{now,jdbcType=BIGINT}
        order by create_at
    </select>

    <select id="queryUserOrders" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_order
                where deleted = false
        <if test="userId != null">
            AND user_id = #{userId}
        </if>
        <if test="status != null and status != -1">
            AND status = #{status}
        </if>
        order by create_at desc
        limit #{offset},#{limit}
    </select>
    <select id="selectUnpaidOrders" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_order
        where deleted = false
          AND create_at &lt; #{expired}
          AND status = #{status}
        order by create_at desc
    </select>

    <select id="queryTable" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_order
                where deleted = false
        <if test="startTime != null">
            AND create_at &gt; #{startTime}
        </if>
        <if test="endTime != null">
            AND create_at &lt; #{endTime}
        </if>
        <if test="orderType != null">
            AND order_type = #{orderType}
        </if>
        <if test="orderNum != null">
            AND order_num = #{orderNum}
        </if>
        <if test="userId != null">
            AND user_id = #{userId}
        </if>
        <if test="status != null and status != -1">
            AND status = #{status}
        </if>
        order by create_at desc
        limit #{offset},#{limit}
    </select>

    <select id="queryTableCount" resultType="long">
        select count(id)
        from t_order
                where deleted = false
        <if test="startTime != null">
            AND create_at &gt; #{startTime}
        </if>
        <if test="endTime != null">
            AND create_at &lt; #{endTime}
        </if>
        <if test="orderType != null">
            AND order_type = #{orderType}
        </if>
        <if test="orderNum != null">
            AND order_num = #{orderNum}
        </if>
        <if test="userId != null">
            AND user_id = #{userId}
        </if>
        <if test="status != null and status != -1">
            AND status = #{status}
        </if>
    </select>

<!--auto generated by MybatisCodeHelper on 2021-07-27-->
    <update id="updateByOrderNum">
        update t_order
        <set>
            <if test="updated.subject != null">
                subject = #{updated.subject,jdbcType=VARCHAR},
            </if>
            <if test="updated.orderType != null">
                order_type = #{updated.orderType,jdbcType=VARCHAR},
            </if>
            <if test="updated.itemAmount != null">
                item_amount = #{updated.itemAmount,jdbcType=INTEGER},
            </if>
            <if test="updated.totalPrice != null">
                total_price = #{updated.totalPrice,jdbcType=DECIMAL},
            </if>
            <if test="updated.totalFee != null">
                total_fee = #{updated.totalFee,jdbcType=DECIMAL},
            </if>
            <if test="updated.totalProductPrice != null">
                total_product_price = #{updated.totalProductPrice,jdbcType=DECIMAL},
            </if>
            <if test="updated.totalDiscount != null">
                total_discount = #{updated.totalDiscount,jdbcType=DECIMAL},
            </if>
            <if test="updated.realPay != null">
                real_pay = #{updated.realPay,jdbcType=DECIMAL},
            </if>
            <if test="updated.userId != null">
                user_id = #{updated.userId,jdbcType=BIGINT},
            </if>
            <if test="updated.comment != null">
                comment = #{updated.comment,jdbcType=VARCHAR},
            </if>
            <if test="updated.status != null">
                status = #{updated.status,jdbcType=TINYINT},
            </if>
            <if test="updated.refund != null">
                refund = #{updated.refund,jdbcType=BOOLEAN},
            </if>
            <if test="updated.rate != null">
                rate = #{updated.rate,jdbcType=BOOLEAN},
            </if>
            <if test="updated.extra != null">
                extra = #{updated.extra,jdbcType=VARCHAR},
            </if>
            <if test="updated.createAt != null">
                create_at = #{updated.createAt,jdbcType=BIGINT},
            </if>
            <if test="updated.updateAt != null">
                update_at = #{updated.updateAt,jdbcType=BIGINT},
            </if>
            <if test="updated.deleted != null">
                deleted = #{updated.deleted,jdbcType=BOOLEAN},
            </if>
        </set>
        where order_num=#{orderNum,jdbcType=VARCHAR}
    </update>
    
    <select id="getSales" resultType="java.math.BigDecimal">
        select IFNULL(sum(real_pay),0.00)
        from
        t_order
        where status > 0
        and deleted = false
        <if test="startTime != null">
            AND create_at &gt; #{startTime}
        </if>
        <if test="endTime != null">
            AND create_at &lt; #{endTime}
        </if>
    </select>
    
    
</mapper>
